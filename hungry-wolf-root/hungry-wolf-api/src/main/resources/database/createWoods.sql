CREATE SCHEMA "public";

CREATE SEQUENCE "public".access_token_access_token_id_seq START WITH 1;

CREATE SEQUENCE "public".account_account_id_seq START WITH 1;

CREATE SEQUENCE "public".chef_chef_id_seq START WITH 1;

CREATE SEQUENCE "public".chef_meal_pricing_chef_meal_pricing_id_seq START WITH 1;

CREATE SEQUENCE "public".chef_rating_factor_chef_rating_ractor_id_seq START WITH 1;

CREATE SEQUENCE "public".currency_lookup_currency_id_seq START WITH 1;

CREATE SEQUENCE "public".customer_pricing_eagle_view_customer_pricing_eagle_view_id_seq START WITH 1;

CREATE SEQUENCE "public".identity_check_type_identity_check_type_id_seq START WITH 1;

CREATE SEQUENCE "public".identitycheck_identity_check_id_seq START WITH 1;

CREATE SEQUENCE "public".identitycheckstatus_identitycheckstatus_id_seq START WITH 1;

CREATE SEQUENCE "public".login_user_login_user_id_seq START WITH 1;

CREATE SEQUENCE "public".meal_item_lookups_meal_item_lookup_seq START WITH 1;

CREATE SEQUENCE "public".meal_item_meal_item_id_seq START WITH 1;

CREATE SEQUENCE "public".meal_measurement_meal_measurement_id_seq START WITH 1;

CREATE SEQUENCE "public".meal_serving_meal_serving_id_seq START WITH 1;

CREATE SEQUENCE "public".meal_summary_meal_summary_id_seq START WITH 1;

CREATE SEQUENCE "public".meal_tags_meal_tag_id_seq START WITH 1;

CREATE SEQUENCE "public".meals_meal_id_seq START WITH 1;

CREATE SEQUENCE "public".menu_rating_factor_menu_rating_factor_id_seq START WITH 1;

CREATE SEQUENCE "public".menu_rating_menu_rating_id_seq START WITH 1;

CREATE SEQUENCE "public".price_quote_eagle_view_price_quote_eagle_view_id_seq START WITH 1;

CREATE SEQUENCE "public".pricing_rate_lookup_pricing_rate_id_seq START WITH 1;

CREATE SEQUENCE "public".pricing_upload_job_pricing_upload_job_id_seq START WITH 1;

CREATE SEQUENCE "public".user_userid_seq START WITH 1;

CREATE SEQUENCE "public".wolf_cart_item_wolf_cart_id_seq START WITH 1;

CREATE SEQUENCE "public".wolf_cart_wolf_cart_id_seq START WITH 1;

CREATE SEQUENCE "public".wolf_meal_pricing_wolf_meal_pricing_id_seq START WITH 1;

CREATE SEQUENCE "public".wolf_order_item_wolf_order_item_seq START WITH 1;

CREATE SEQUENCE "public".wolf_order_wolf_order_id_seq START WITH 1;

CREATE TABLE "public".account ( 
	account_id           integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	status               char(1)   ,
	created_date         timestamp DEFAULT CURRENT_TIMESTAMP  ,
	created_by           varchar(50)   ,
	modified_date        timestamp   ,
	modifed_by           varchar(50)   ,
	CONSTRAINT pk_account_account_id PRIMARY KEY ( account_id )
 );

CREATE TABLE "public".cart_status_lookup ( 
	wolf_cart_status_cd  char(1)   ,
	wolf_cart_status_desc varchar(100)   ,
	created_by           varchar(50)   ,
	created_date         timestamp   ,
	CONSTRAINT unq_wolf_cart_status_lookup_wolf_cart_status_cd UNIQUE ( wolf_cart_status_cd ) 
 );

CREATE TABLE "public".chef ( 
	chef_id              integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	user_id              integer   ,
	rating               integer   ,
	CONSTRAINT pk_chef_chef_id PRIMARY KEY ( chef_id )
 );

CREATE TABLE "public".chef_rating ( 
	chef_rating_id       integer  NOT NULL ,
	chef_id              integer  NOT NULL ,
	overall_rating       numeric(1000,2)   ,
	created_date         timestamp   ,
	modified_date        timestamp   ,
	created_by           varchar(50)   ,
	modified_by          varchar(50)   ,
	CONSTRAINT pk_chef_rating_chef_rating_d PRIMARY KEY ( chef_rating_id ),
	CONSTRAINT fk_chef_rating_chef_id FOREIGN KEY ( chef_id ) REFERENCES "public".chef( chef_id )  
 );

CREATE TABLE "public".chef_rating_factor ( 
	chef_rating_factor_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	rating_factor_cd     varchar(4)   ,
	rating_factor_desc   varchar(200)   ,
	"valid"              bool   ,
	CONSTRAINT pk_chef_rating_factor_chef_rating_ractor_id PRIMARY KEY ( chef_rating_factor_id )
 );

CREATE TABLE "public".currency_lookup ( 
	currency_id          integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	currency_cd          varchar(5)   ,
	currency_desc        char(2)   ,
	created_date         timestamp   ,
	modified             timestamp   ,
	created_by           varchar(50)   ,
	modified_by          varchar(50)   ,
	CONSTRAINT pk_currency_lookup_currency_id PRIMARY KEY ( currency_id )
 );

CREATE TABLE "public".customer_pricing_eagle_view ( 
	customer_pricing_eagle_view_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	zipcode              varchar(15)   ,
	material_type        varchar(25)   ,
	container_size       varchar(25)   ,
	equipment_type       varchar(25)   ,
	haul_rate            numeric(1000,2)   ,
	delivery_rate        numeric(1000,2)   ,
	price_per_additional_ton numeric(1000,2)   ,
	margin               numeric(1000,2)   ,
	"valid"              bool   ,
	CONSTRAINT pk_customer_pricing_eagle_view_customer_pricing_eagle_view_id PRIMARY KEY ( customer_pricing_eagle_view_id )
 );

CREATE TABLE "public".identity_check_status ( 
	identity_check_status_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	check_status_desc    varchar(50)   ,
	check_status_cd      char(1)   ,
	created_date         timestamp   ,
	modified_date        timestamp   ,
	created_by           varchar(50)   ,
	modified_by          varchar(50)   ,
	CONSTRAINT pk_identitycheckstatus_identitycheckstatus_id PRIMARY KEY ( identity_check_status_id )
 );

CREATE TABLE "public".identity_check_type ( 
	identity_check_type_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	check_type_cd        char(1)   ,
	check_type_desc      varchar(50)   ,
	CONSTRAINT pk_identity_check_type_identity_check_type_id PRIMARY KEY ( identity_check_type_id )
 );

CREATE TABLE "public".meal_item_type ( 
	meal_item_type_id    integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	meal_item_cd         varchar(4)   ,
	meal_item_desc       varchar(100)   ,
	"valid"              bool   ,
	CONSTRAINT pk_meal_item_lookups_meal_item_lookup PRIMARY KEY ( meal_item_type_id )
 );

CREATE TABLE "public".meal_measurement_type ( 
	meal_measurement_id  integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	measurement_cd       varchar(4)   ,
	measurement_desc     varchar(100)   ,
	"valid"              bool   ,
	CONSTRAINT pk_meal_measurement_meal_measurement_id PRIMARY KEY ( meal_measurement_id )
 );

CREATE TABLE "public".meals ( 
	meal_id              integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	title                varchar(200)   ,
	meal_date            date   ,
	chef_id              integer   ,
	created_date         timestamp DEFAULT CURRENT_TIMESTAMP  ,
	created_by           varchar(50)   ,
	modified_date        timestamp   ,
	modified_by          varchar(50)   ,
	CONSTRAINT pk_meals_meal_id PRIMARY KEY ( meal_id ),
	CONSTRAINT fk_meals_chef FOREIGN KEY ( chef_id ) REFERENCES "public".chef( chef_id )  
 );

CREATE TABLE "public".menu_rating ( 
	menu_rating_id       integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	menu_id              integer   ,
	overall_rating       numeric(1000,2)   ,
	CONSTRAINT pk_menu_rating_menu_rating_id PRIMARY KEY ( menu_rating_id ),
	CONSTRAINT fk_menu_rating_meal_id FOREIGN KEY ( menu_id ) REFERENCES "public".meals( meal_id )  
 );

CREATE TABLE "public".menu_rating_factor ( 
	menu_rating_factor_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	rating_factor_cd     varchar(4)   ,
	rating_factor_desc   varchar(50)   ,
	"valid"              bool   ,
	CONSTRAINT pk_menu_rating_factor_menu_rating_factor_id PRIMARY KEY ( menu_rating_factor_id )
 );

CREATE TABLE "public".order_status_lookup ( 
	wolf_order_status_cd char(1)   ,
	wolf_order_status_desc varchar(100)   ,
	created_date         timestamp   ,
	created_by           varchar(50)   ,
	CONSTRAINT unq_wolf_order_status_lookup_wolf_order_status_cd UNIQUE ( wolf_order_status_cd ) 
 );

CREATE TABLE "public".price_quote_eagle_view ( 
	price_quote_eagle_view_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	quote_id             uuid   ,
	address              varchar(250)   ,
	zipcode              varchar(25)   ,
	material_type        varchar(25)   ,
	container_size       varchar(25)   ,
	equipment_type       varchar(25)   ,
	haul_rate            numeric(1000,2)   ,
	delivery_rate        numeric(1000,2)   ,
	price_per_additional_ton numeric(1000,2)   ,
	margin               numeric(1000,2)   ,
	quote_expiry_date    timestamp   ,
	CONSTRAINT pk_price_quote_eagle_view_price_quote_eagle_view_id PRIMARY KEY ( price_quote_eagle_view_id )
 );

CREATE TABLE "public".pricing_rate_lookup ( 
	pricing_rate_id      integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	rate_cd              varchar(25)   ,
	rate_group           char(1)   ,
	rate_desc            varchar(100)   ,
	fees                 bool   ,
	"valid"              bool   ,
	CONSTRAINT pk_pricing_rate_lookup_pricing_rate_id PRIMARY KEY ( pricing_rate_id )
 );

CREATE TABLE "public".pricing_upload_job ( 
	pricing_upload_job_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	upload_file_location varchar(200)   ,
	job_status           varchar(20)   ,
	created_date         timestamp   ,
	created_by           varchar(50)   ,
	modified_date        timestamp   ,
	modified_by          varchar(50)   ,
	retry_count          integer   ,
	retry_enabled        bool   ,
	CONSTRAINT pk_pricing_upload_job_pricing_upload_job_id PRIMARY KEY ( pricing_upload_job_id )
 );

CREATE TABLE "public"."user" ( 
	userid               integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	first_name           varchar(100)  NOT NULL ,
	last_name            varchar(100)   ,
	date_of_birth        date   ,
	phone                date   ,
	email_address        varchar(100)   ,
	account_type_id      integer   ,
	created_by           varchar(50)   ,
	modified_by          varchar(50)   ,
	created_date         timestamp   ,
	modified_date        timestamp   ,
	CONSTRAINT pk_table_userid PRIMARY KEY ( userid ),
	CONSTRAINT fk_user_account_id FOREIGN KEY ( account_type_id ) REFERENCES "public".account( account_id )  
 );

COMMENT ON TABLE "public"."user" IS 'this is the user table for hungry wolf user base.';

CREATE TABLE "public".wolf_cart ( 
	wolf_cart_id         integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	wolf_id              integer  NOT NULL ,
	created_date         timestamp   ,
	modified_date        timestamp   ,
	created_by           varchar(50)   ,
	modified_by          varchar(50)   ,
	wolf_cart_status_cd  char(1)   ,
	auto_deleted         bool   ,
	CONSTRAINT pk_wolf_cart_wolf_cart_id_0 PRIMARY KEY ( wolf_cart_id ),
	CONSTRAINT fk_wolf_cart_status_cd FOREIGN KEY ( wolf_cart_status_cd ) REFERENCES "public".cart_status_lookup( wolf_cart_status_cd )  
 );

CREATE TABLE "public".wolf_cart_item ( 
	wolf_cart_item_id    integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	meal_id              integer   ,
	quantity             integer   ,
	created_date         timestamp   ,
	created_by           varchar(50)   ,
	modified_date        timestamp   ,
	modified_by          varchar(50)   ,
	wolf_cart_id         integer   ,
	deleted              bool   ,
	CONSTRAINT pk_wolf_cart_wolf_cart_id PRIMARY KEY ( wolf_cart_item_id ),
	CONSTRAINT fk_wolf_cart_meal_id FOREIGN KEY ( meal_id ) REFERENCES "public".meals( meal_id )  ,
	CONSTRAINT fk_wolf_cart_item_cart_id FOREIGN KEY ( wolf_cart_id ) REFERENCES "public".wolf_cart( wolf_cart_id )  
 );

CREATE TABLE "public".wolf_meal_pricing ( 
	wolf_meal_pricing_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	meal_id              integer   ,
	pricing_rate_cd      integer   ,
	currency_id          integer   ,
	rate_type            integer   ,
	created_date         timestamp   ,
	modified_date        timestamp   ,
	created_by           varchar(50)   ,
	modified_by          varchar(50)   ,
	CONSTRAINT pk_wolf_meal_pricing_wolf_meal_pricing_id PRIMARY KEY ( wolf_meal_pricing_id ),
	CONSTRAINT fk_wolf_meal_pricing_currency_id FOREIGN KEY ( currency_id ) REFERENCES "public".currency_lookup( currency_id )  ,
	CONSTRAINT fk_wolf_meal_pricing_rate_cd FOREIGN KEY ( pricing_rate_cd ) REFERENCES "public".pricing_rate_lookup( pricing_rate_id )  
 );

CREATE TABLE "public".wolf_order ( 
	wolf_order_id        integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	wolf_cart_id         integer   ,
	wolf_id              integer   ,
	wolf_order_status_cd char(1)   ,
	delivery_method      integer   ,
	created_date         timestamp   ,
	modified_d           timestamp   ,
	created_by           varchar(50)   ,
	modified_by          varchar(50)   ,
	CONSTRAINT pk_wolf_order_wolf_order_id PRIMARY KEY ( wolf_order_id ),
	CONSTRAINT fk_wolf_order_status_cd FOREIGN KEY ( wolf_order_status_cd ) REFERENCES "public".order_status_lookup( wolf_order_status_cd )  ,
	CONSTRAINT fk_wolf_order_cart_id FOREIGN KEY ( wolf_cart_id ) REFERENCES "public".wolf_cart( wolf_cart_id )  
 );

CREATE TABLE "public".wolf_order_item ( 
	wolf_order_item_id   integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	wolf_order_id        integer   ,
	quantity             integer   ,
	order_item_price     numeric(1000,2)   ,
	wolf_cart_item_id    integer   ,
	created_date         timestamp   ,
	created_by           varchar(50)   ,
	modified_date        timestamp   ,
	modified_by          varchar(50)   ,
	CONSTRAINT pk_wolf_order_item_wolf_order_item PRIMARY KEY ( wolf_order_item_id ),
	CONSTRAINT fk_wolf_order_cart_item_id FOREIGN KEY ( wolf_cart_item_id ) REFERENCES "public".wolf_cart_item( wolf_cart_item_id )  
 );

CREATE TABLE "public".wolf_order_status ( 
	wolf_order_id        integer   ,
	wolf_order_item_id   integer   ,
	wolf_order_status_cd char(1)   ,
	created_date         timestamp DEFAULT CURRENT_TIMESTAMP  ,
	created_by           varchar(50)   ,
	modified_date        timestamp   ,
	modified_by          varchar(50)   ,
	CONSTRAINT fk_wolf_order_status_order_status FOREIGN KEY ( wolf_order_status_cd ) REFERENCES "public".order_status_lookup( wolf_order_status_cd )  ,
	CONSTRAINT fk_wolf_order_status_order_id FOREIGN KEY ( wolf_order_id ) REFERENCES "public".wolf_order( wolf_order_id )  ,
	CONSTRAINT fk_wolf_order_status_order_item_id FOREIGN KEY ( wolf_order_item_id ) REFERENCES "public".wolf_order_item( wolf_order_item_id )  
 );

CREATE TABLE "public".chef_meal_pricing ( 
	chef_meal_pricing_id integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	meal_id              integer  NOT NULL ,
	pricing_rate_cd      integer  NOT NULL ,
	currency_id          integer  NOT NULL ,
	rate_type            integer  NOT NULL ,
	created_date         timestamp   ,
	created_by           varchar(50)   ,
	modified_date        timestamp   ,
	modified_by          varchar(50)   ,
	CONSTRAINT pk_chef_meal_pricing_chef_meal_pricing_id PRIMARY KEY ( chef_meal_pricing_id ),
	CONSTRAINT fk_chef_meal_pricing_currency_id FOREIGN KEY ( currency_id ) REFERENCES "public".currency_lookup( currency_id )  ,
	CONSTRAINT fk_chef_meal_pricing_meal_id FOREIGN KEY ( meal_id ) REFERENCES "public".meals( meal_id )  ,
	CONSTRAINT fk_chef_meal_pricing_rate_id FOREIGN KEY ( pricing_rate_cd ) REFERENCES "public".pricing_rate_lookup( pricing_rate_id )  
 );

CREATE TABLE "public".chef_rating_detail ( 
	chef_rating_id       integer  NOT NULL ,
	rating_factor_id     integer   ,
	rating_val           numeric(1000,2)   ,
	crated_date          timestamp   ,
	modified_date        timestamp   ,
	created_by           varchar(50)   ,
	modified_by          varchar(50)   ,
	CONSTRAINT fk_chef_rating_detail_chef_rating_id FOREIGN KEY ( chef_rating_id ) REFERENCES "public".chef_rating( chef_rating_id )  ,
	CONSTRAINT fk_chef_rating_detail_rating_factor_id FOREIGN KEY ( rating_factor_id ) REFERENCES "public".chef_rating_factor( chef_rating_factor_id )  
 );

CREATE INDEX idx_chef_rating_detail ON "public".chef_rating_detail ( chef_rating_id, rating_factor_id );

CREATE TABLE "public".identity_check ( 
	identity_check_id    integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	verified_date        timestamp   ,
	checkstatus          integer   ,
	userid               integer   ,
	check_type           integer   ,
	created_date         timestamp   ,
	modifed_date         timestamp   ,
	created_by           varchar(50)   ,
	modified_by          varchar(50)   ,
	CONSTRAINT pk_identitycheck_identity_check_id PRIMARY KEY ( identity_check_id ),
	CONSTRAINT fk_identitycheck_check_status FOREIGN KEY ( checkstatus ) REFERENCES "public".identity_check_status( identity_check_status_id )  ,
	CONSTRAINT fk_identity_check_type FOREIGN KEY ( check_type ) REFERENCES "public".identity_check_type( identity_check_type_id )  ,
	CONSTRAINT fk_identitycheck_userid FOREIGN KEY ( userid ) REFERENCES "public"."user"( userid )  
 );

CREATE TABLE "public".login_user ( 
	login_user_id        integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	username             varchar(200)   ,
	passwordhash         varchar(300)   ,
	salt                 varchar(100)   ,
	userid               integer   ,
	created_date         timestamp   ,
	modified_date        timestamp   ,
	created_by           varchar(50)   ,
	modified_by          varchar(50)   ,
	"valid"              bool   ,
	CONSTRAINT pk_login_user_login_user_id PRIMARY KEY ( login_user_id ),
	CONSTRAINT fk_login_user_userid FOREIGN KEY ( userid ) REFERENCES "public"."user"( userid )  
 );

CREATE TABLE "public".meal_item ( 
	meal_item_id         integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	meal_id              integer   ,
	item_desc            varchar(300)   ,
	item_type_id         integer   ,
	measurement_type_id  integer   ,
	CONSTRAINT pk_meal_item_meal_item_id PRIMARY KEY ( meal_item_id ),
	CONSTRAINT fk_meal_item_item_id FOREIGN KEY ( item_type_id ) REFERENCES "public".meal_item_type( meal_item_type_id )  ,
	CONSTRAINT fk_meal_item_measurement_type_id FOREIGN KEY ( measurement_type_id ) REFERENCES "public".meal_measurement_type( meal_measurement_id )  
 );

CREATE TABLE "public".meal_serving ( 
	meal_serving_id      integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	meal_id              integer   ,
	available            integer  NOT NULL ,
	time_left            time   ,
	meal_date            date   ,
	order_closed_by      timestamp   ,
	created_date         timestamp   ,
	modified_date        timestamp   ,
	created_by           varchar(50)   ,
	modified_by          varchar(50)   ,
	CONSTRAINT pk_meal_serving_meal_serving_id PRIMARY KEY ( meal_serving_id ),
	CONSTRAINT fk_meal_serving_meal_id FOREIGN KEY ( meal_id ) REFERENCES "public".meals( meal_id )  
 );

CREATE TABLE "public".meal_summary ( 
	meal_summary_id      integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	meal_id              integer   ,
	notes                varchar(600)   ,
	notes_created_date   timestamp   ,
	created_date         timestamp   ,
	created_by           varchar(50)   ,
	modified_date        timestamp   ,
	modified_by          varchar(50)   ,
	CONSTRAINT pk_meal_summary_meal_summary_id PRIMARY KEY ( meal_summary_id ),
	CONSTRAINT fk_meal_summary_meal_id FOREIGN KEY ( meal_id ) REFERENCES "public".meals( meal_id )  
 );

CREATE TABLE "public".meal_tags ( 
	meal_tag_id          integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	meal_id              integer   ,
	tag                  varchar(50)   ,
	created_date         timestamp DEFAULT CURRENT_TIMESTAMP  ,
	created_by           varchar(50)   ,
	modified_date        timestamp   ,
	modified_by          varchar(50)   ,
	"valid"              bool   ,
	CONSTRAINT pk_meal_tags_meal_tag_id PRIMARY KEY ( meal_tag_id ),
	CONSTRAINT fk_meal_tags_meal_id FOREIGN KEY ( meal_id ) REFERENCES "public".meals( meal_id )  
 );

CREATE TABLE "public".menu_rating_detail ( 
	menu_rating_id       integer   ,
	menu_rating_factor_id integer   ,
	rating_val           numeric(1000,2)   ,
	CONSTRAINT fk_menu_rating_detail_menu_rating_id FOREIGN KEY ( menu_rating_id ) REFERENCES "public".menu_rating( menu_rating_id )  ,
	CONSTRAINT fk_menu_rating_detail_rating_factor_id FOREIGN KEY ( menu_rating_factor_id ) REFERENCES "public".menu_rating_factor( menu_rating_factor_id )  
 );

CREATE TABLE "public".access_token ( 
	access_token_id      integer  NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	access_token         varchar(300)   ,
	refresh_token        varchar(300)   ,
	expiry_date          timestamp   ,
	user_id              integer   ,
	created_date         timestamp   ,
	"valid"              bool   ,
	device_id            varchar(200)   ,
	login_user_id        integer   ,
	CONSTRAINT pk_access_token_access_token_id PRIMARY KEY ( access_token_id ),
	CONSTRAINT fk_access_token_login_user_id FOREIGN KEY ( login_user_id ) REFERENCES "public".login_user( login_user_id )  ,
	CONSTRAINT fk_access_token_user FOREIGN KEY ( user_id ) REFERENCES "public"."user"( userid )  
 );
